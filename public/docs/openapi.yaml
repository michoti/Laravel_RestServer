openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://REST_APP.test'
paths:
  /api/v1/comments:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - 'Comments Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Comments Management'
      security: []
  '/api/v1/comments/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Comments Management'
      security: []
    patch:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Comments Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: 16
        required: true
        schema:
          type: integer
  /api/v1/users:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Users Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Users Management'
      security: []
  '/api/v1/users/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Users Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Users Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/users/{user_id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Users Management'
      security: []
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/user:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/posts:
    get:
      summary: 'Display a list of posts'
      description: ''
      parameters:
        -
          in: query
          name: page_size
          description: 'size per page. Default is ''20''. Example 20.'
          example: 17
          required: false
          schema:
            type: integer
            description: 'size per page. Default is ''20''. Example 20.'
            example: 17
        -
          in: query
          name: '?page='
          description: 'page to view. Example 1.'
          example: 11
          required: false
          schema:
            type: integer
            description: 'page to view. Example 1.'
            example: 11
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: '0'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 18
                      title: minus
                      body: []
                      created_at: '2022-07-26T10:27:10.000000Z'
                      updated_at: '2022-07-26T10:27:10.000000Z'
                    -
                      id: 19
                      title: culpa
                      body: []
                      created_at: '2022-07-26T10:27:11.000000Z'
                      updated_at: '2022-07-26T10:27:11.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 18
                        title: minus
                        body: []
                        created_at: '2022-07-26T10:27:10.000000Z'
                        updated_at: '2022-07-26T10:27:10.000000Z'
                      -
                        id: 19
                        title: culpa
                        body: []
                        created_at: '2022-07-26T10:27:11.000000Z'
                        updated_at: '2022-07-26T10:27:11.000000Z'
                    items:
                      type: object
      tags:
        - 'Posts Management'
      security: []
    post:
      summary: 'Store a newly created post in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Posts Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: perferendis
                body:
                  type: string
                  description: ''
                  example: unde
                user_ids:
                  type: integer
                  description: ''
                  example: 19
              required:
                - title
                - body
                - user_ids
      security: []
  '/api/v1/posts/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Posts Management'
      security: []
    put:
      summary: 'Update the specified post in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Posts Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: ''
        example: 5
        required: true
        schema:
          type: integer
  '/api/v1/posts/{post_id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Posts Management'
      security: []
    parameters:
      -
        in: path
        name: post_id
        description: 'The ID of the post.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: ''
        example: 4
        required: true
        schema:
          type: integer
tags:
  -
    name: 'Comments Management'
    description: 'APIs to manage the Posts Resource'
  -
    name: 'Users Management'
    description: 'APIs to manage the Posts Resource'
  -
    name: Endpoints
    description: ''
  -
    name: 'Posts Management'
    description: 'APIs to manage the Posts Resource'
